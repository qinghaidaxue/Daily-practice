#include<iostream>  
#include<assert.h>  
using namespace std;
struct node
{
	int data;
	node *lchild;
	node *rchild;
};
node *newnode( )  
{  
    node *T;  
    T = (node*)malloc(sizeof(node));  
    T -> lchild = T ->rchild = NULL;  
    return T;  
}  
void creat(node *root,int m)
{
    if(m<root->data)
	{
	   if(root->lchild==NULL)
	    {
	      (root->lchild)=newnode();
	      (root->lchild)->data=m;
	      return ;
	    }
	   else
	  {
	      creat(root->lchild,m);
	  }
    } 
	  if(m>root->data)
	{
		
	   if(root->rchild==NULL)
	    {
	      (root->rchild)=newnode();
	      (root->rchild)->data=m;
	       return ;
     	}
	   else
	   {
	     creat(root->rchild,m);
	   }
    }
    if(m==root->data)
    {
	   m=root->data;
       return ;
    }
}
void preorder(node *r)
{
	if(r==NULL)
  	{
  		return ;
	  }
	else
	  {
	  	cout<<r->data<<" ";
	  	preorder(r->lchild);
		preorder(r->rchild);
	  }
	return ;
}
int main()
{
	int i,n,a;
	node root;
	cin>>a;
	root.data=a;
	root.lchild=root.rchild=NULL;
	for(i=0;;i++)
	{
		cin>>a;
	    creat(&root,a);
		if(getchar()=='\n')
		   break;
	}
	 preorder(&root);
	 return 0;
	
}

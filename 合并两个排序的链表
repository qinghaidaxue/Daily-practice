#include<iostream>
using namespace std;
/*
struct ListNode {
	int val;
	struct ListNode *next;
	ListNode(int x) :
			val(x), next(NULL) {
	}
};*/
class Solution {
public:
    ListNode* Merge(ListNode* pHead1, ListNode* pHead2)
    {
        ListNode* s;
        //ListNode* a;
       // a=s;
        if(pHead1==NULL&&pHead2==NULL)
            return NULL;
     // while(pHead1!=NULL||pHead2!=NULL)
        if(pHead1==NULL&&pHead2!=NULL)
         //if(pHead2!=NULL)
            //
               // s=pHead2;
                return pHead2;
                //s=s->next;
               // pHead2=pHead2->next;
            //
        
         if(pHead2==NULL&&pHead1!=NULL)
          //if(pHead1!=NULL)
            
             //  s=pHead1;
               return pHead1;
        
                //s=s->next;
                //pHead1=pHead1->next;
            
         
       // while(pHead1!=NULL&&pHead2!=NULL)
        //{
                //s->val=min(pHead2,pHead1);
                if(pHead1->val<=pHead2->val)
                {
                    s=pHead1;
                   // pHead1=pHead1->next;
                s->next=Merge( pHead1->next, pHead2)  ;
                }
               if(pHead1->val>pHead2->val)
                {
                    s=pHead2;
                   // pHead2=pHead2->next;
                
                //s=s->next;
                 s->next=Merge( pHead1, pHead2->next)  ;
               }
               //pHead2=pHead2->next;
               // s=s->next;
               // pHead1=pHead1->next;
      //  }
        
        return s;
    }
};
